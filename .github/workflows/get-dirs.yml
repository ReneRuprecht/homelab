name: Extract dirs

on:
  workflow_call:
    inputs:
      base_dir:
        required: true
        type: string
      on:
        type: string
        description: "Get 'all' or only 'changed' dirs"
      min_depth:
        type: string
        description: "Min depth for the find"
        default: "2"
      max_depth:
        type: string
        description: "Max depth for the find"
        default: "2"
    outputs:
      dirs:
        value: ${{ jobs.get-dirs.outputs.dirs }}
        description: "Json of directories (all or changed)"

jobs:
  get-dirs:
    runs-on: self-hosted
    container:
      image:  reneruprecht/ci-node22
    outputs:
      dirs: ${{ steps.get-dirs.outputs.dirs }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Info Banner
        run: |
          CHOICE="$(echo ${{ inputs.on }} | tr [a-z] [A-Z])"

          {
            echo "## ‚ÑπÔ∏è  SEARCH FOR ${CHOICE} DIRS"
          } >> $GITHUB_STEP_SUMMARY

      - name: Find all changed terraform dirs
        id: get-dirs
        run: |
          CHOICE="${{ inputs.on }}"
          DIR="${{ inputs.base_dir }}"
          MINDEPTH="${{ inputs.min_depth }}"
          MAXDEPTH="${{ inputs.max_depth }}"

          if [ "$CHOICE" = "all" ]; then
            # all dirs
            DIRS=$(find ${DIR} -mindepth ${MINDEPTH} -maxdepth ${MAXDEPTH} -type d \
              | sed "s|${DIR}/||")
          else
            # only changed dirs
            echo "Detecting changed components..."
            DIRS=$(git diff --name-only HEAD~1 HEAD \
              | grep "^${DIR}/" \
              | sed "s|^${DIR}/||" \
              | sort -u)
          fi

          if [ -z "$DIRS" ]; then
            JSON="[]"
          else
            JSON=$(echo "$DIRS" | jq -R . | jq -s .)
          fi

          {
            echo "dirs<<EOF"
            echo "$JSON"
            echo "EOF"
          } >> $GITHUB_OUTPUT


          if [ "$JSON" = "[]" ]; then
            {
              echo "# Nothing was changed"
            } >> $GITHUB_STEP_SUMMARY
          else
            {
              echo "# Found Dirs"
              echo "$DIRS" | sed 's/^/üìÅ /' | sed 's/$/<br>/'
            } >> $GITHUB_STEP_SUMMARY
          fi
